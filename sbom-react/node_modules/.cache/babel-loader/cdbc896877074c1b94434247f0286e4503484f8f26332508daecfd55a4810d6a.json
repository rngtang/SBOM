{"ast":null,"code":"// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist=require(\"chartist\");// ##############################\n// // // variables used to create animation on charts\n// #############################\nvar delays=80,durations=500;var delays2=80,durations2=500;// ##############################\n// // // Daily Sales\n// #############################\nvar dailySalesChart={data:{labels:[\"M\",\"T\",\"W\",\"T\",\"F\",\"S\",\"S\"],series:[[12,17,7,17,23,18,38]]},options:{lineSmooth:Chartist.Interpolation.cardinal({tension:0}),low:0,high:50,// creative tim: we recommend you to set the high sa the biggest value + something for a better look\nchartPadding:{top:0,right:0,bottom:0,left:0}},// for animation\nanimation:{draw:function draw(data){if(data.type===\"line\"||data.type===\"area\"){data.element.animate({d:{begin:600,dur:700,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify(),easing:Chartist.Svg.Easing.easeOutQuint}});}else if(data.type===\"point\"){data.element.animate({opacity:{begin:(data.index+1)*delays,dur:durations,from:0,to:1,easing:\"ease\"}});}}}};// ##############################\n// // // Email Subscriptions\n// #############################\nvar emailsSubscriptionChart={data:{labels:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],series:[[542,443,320,780,553,453,326,434,568,610,756,895]]},options:{axisX:{showGrid:false},low:0,high:1000,chartPadding:{top:0,right:5,bottom:0,left:0}},responsiveOptions:[[\"screen and (max-width: 640px)\",{seriesBarDistance:5,axisX:{labelInterpolationFnc:function labelInterpolationFnc(value){return value[0];}}}]],animation:{draw:function draw(data){if(data.type===\"bar\"){data.element.animate({opacity:{begin:(data.index+1)*delays2,dur:durations2,from:0,to:1,easing:\"ease\"}});}}}};// ##############################\n// // // Completed Tasks\n// #############################\nvar completedTasksChart={data:{labels:[\"12am\",\"3pm\",\"6pm\",\"9pm\",\"12pm\",\"3am\",\"6am\",\"9am\"],series:[[230,750,450,300,280,240,200,190]]},options:{lineSmooth:Chartist.Interpolation.cardinal({tension:0}),low:0,high:1000,// creative tim: we recommend you to set the high sa the biggest value + something for a better look\nchartPadding:{top:0,right:0,bottom:0,left:0}},animation:{draw:function draw(data){if(data.type===\"line\"||data.type===\"area\"){data.element.animate({d:{begin:600,dur:700,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify(),easing:Chartist.Svg.Easing.easeOutQuint}});}else if(data.type===\"point\"){data.element.animate({opacity:{begin:(data.index+1)*delays,dur:durations,from:0,to:1,easing:\"ease\"}});}}}};module.exports={dailySalesChart:dailySalesChart,emailsSubscriptionChart:emailsSubscriptionChart,completedTasksChart:completedTasksChart};","map":{"version":3,"names":["Chartist","require","delays","durations","delays2","durations2","dailySalesChart","data","labels","series","options","lineSmooth","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","left","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","emailsSubscriptionChart","axisX","showGrid","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","completedTasksChart","module","exports"],"sources":["/Users/alicehu/Desktop/SBOM/sbom/sbom-react/src/variables/charts.js"],"sourcesContent":["// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\n\n// ##############################\n// // // variables used to create animation on charts\n// #############################\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\n// ##############################\n// // // Daily Sales\n// #############################\n\nconst dailySalesChart = {\n  data: {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]],\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0,\n    }),\n    low: 0,\n    high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  },\n  // for animation\n  animation: {\n    draw: function (data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint,\n          },\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\",\n          },\n        });\n      }\n    },\n  },\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst emailsSubscriptionChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]],\n  },\n  options: {\n    axisX: {\n      showGrid: false,\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0,\n    },\n  },\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          },\n        },\n      },\n    ],\n  ],\n  animation: {\n    draw: function (data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\",\n          },\n        });\n      }\n    },\n  },\n};\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst completedTasksChart = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]],\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0,\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  },\n  animation: {\n    draw: function (data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint,\n          },\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\",\n          },\n        });\n      }\n    },\n  },\n};\n\nmodule.exports = {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}