require 'httparty'

module VulnerabilityChecker
  BASE_URL = "https://api.osv.dev/v1/vulns/"

  def self.check_vulns
    # Grabs all unique vulnerability_ids from the Ratings table
    vuln_ids = Rating.pluck(:vulnerability_id).uniq

    vuln_ids.each do |vuln_id|
      # Finds the vulnerability associated with the vulnerability_id
      vulnerability = Vulnerability.find(vuln_id)

      if vulnerability
        url = BASE_URL + vulnerability.vulnID
        response = HTTParty.get(url)

        # Checks if the request was successful
        if response.success?
          data = response.parsed_response

          # finds the rating by vulnerability_id
          rating = Rating.find_by(vulnerability_id: vuln_id)

          if rating
            rating.update(severity: data['database_specific']['severity'].downcase)
          end
        elsif response.code == 404
          puts "No information found for vulnID: #{vulnerability.vulnID}"
        else
          puts "HTTP request failed with code: #{response.code}"
        end
      else
        puts "No Vulnerability found for vulnerability_id: #{vuln_id}"
      end
    end
  end
end
