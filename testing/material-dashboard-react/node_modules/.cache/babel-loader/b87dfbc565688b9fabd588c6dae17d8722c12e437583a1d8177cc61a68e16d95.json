{"ast":null,"code":"var _jsxFileName = \"/Users/alicehu/Desktop/SBOM/sbom/testing/material-dashboard-react/src/examples/Charts/LineCharts/ReportsLineChart/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2  React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// ReportsLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ReportsLineChart/configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nfunction ReportsLineChart(_ref) {\n  _s();\n  let {\n    color,\n    title,\n    description,\n    date,\n    chart\n  } = _ref;\n  const {\n    data,\n    options\n  } = configs(chart.labels || [], chart.datasets || {});\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MDBox, {\n      padding: \"1rem\",\n      children: [useMemo(() => /*#__PURE__*/_jsxDEV(MDBox, {\n        variant: \"gradient\",\n        bgColor: color,\n        borderRadius: \"lg\",\n        coloredShadow: color,\n        py: 2,\n        pr: 0.5,\n        mt: -5,\n        height: \"12.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: data,\n          options: options,\n          redraw: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), [chart, color]), /*#__PURE__*/_jsxDEV(MDBox, {\n        pt: 3,\n        pb: 1,\n        px: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n          variant: \"h6\",\n          textTransform: \"capitalize\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n          component: \"div\",\n          variant: \"button\",\n          color: \"text\",\n          fontWeight: \"light\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"button\",\n            color: \"text\",\n            lineHeight: 1,\n            sx: {\n              mt: 0.15,\n              mr: 0.5\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              children: \"schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDTypography, {\n            variant: \"button\",\n            color: \"text\",\n            fontWeight: \"light\",\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of ReportsLineChart\n_s(ReportsLineChart, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = ReportsLineChart;\nReportsLineChart.defaultProps = {\n  color: \"info\",\n  description: \"\"\n};\n\n// Typechecking props for the ReportsLineChart\nReportsLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  date: PropTypes.string.isRequired,\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired\n};\nexport default ReportsLineChart;\nvar _c;\n$RefreshReg$(_c, \"ReportsLineChart\");","map":{"version":3,"names":["useMemo","PropTypes","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Card","Divider","Icon","MDBox","MDTypography","configs","jsxDEV","_jsxDEV","register","ReportsLineChart","_ref","_s","color","title","description","date","chart","data","options","labels","datasets","sx","height","children","padding","variant","bgColor","borderRadius","coloredShadow","py","pr","mt","redraw","fileName","_jsxFileName","lineNumber","columnNumber","pt","pb","px","textTransform","component","fontWeight","display","alignItems","lineHeight","mr","_c","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object","$RefreshReg$"],"sources":["/Users/alicehu/Desktop/SBOM/sbom/testing/material-dashboard-react/src/examples/Charts/LineCharts/ReportsLineChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2  React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// ReportsLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ReportsLineChart/configs\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nfunction ReportsLineChart({ color, title, description, date, chart }) {\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\n\n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <MDBox padding=\"1rem\">\n        {useMemo(\n          () => (\n            <MDBox\n              variant=\"gradient\"\n              bgColor={color}\n              borderRadius=\"lg\"\n              coloredShadow={color}\n              py={2}\n              pr={0.5}\n              mt={-5}\n              height=\"12.5rem\"\n            >\n              <Line data={data} options={options} redraw />\n            </MDBox>\n          ),\n          [chart, color]\n        )}\n        <MDBox pt={3} pb={1} px={1}>\n          <MDTypography variant=\"h6\" textTransform=\"capitalize\">\n            {title}\n          </MDTypography>\n          <MDTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"light\">\n            {description}\n          </MDTypography>\n          <Divider />\n          <MDBox display=\"flex\" alignItems=\"center\">\n            <MDTypography variant=\"button\" color=\"text\" lineHeight={1} sx={{ mt: 0.15, mr: 0.5 }}>\n              <Icon>schedule</Icon>\n            </MDTypography>\n            <MDTypography variant=\"button\" color=\"text\" fontWeight=\"light\">\n              {date}\n            </MDTypography>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsLineChart\nReportsLineChart.defaultProps = {\n  color: \"info\",\n  description: \"\",\n};\n\n// Typechecking props for the ReportsLineChart\nReportsLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  date: PropTypes.string.isRequired,\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n};\n\nexport default ReportsLineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}