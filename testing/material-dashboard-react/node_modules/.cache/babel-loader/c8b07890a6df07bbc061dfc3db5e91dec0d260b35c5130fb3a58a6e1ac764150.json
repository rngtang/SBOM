{"ast":null,"code":"var _jsxFileName = \"/Users/alicehu/Desktop/SBOM/sbom/testing/material-dashboard-react/src/components/MDTypography/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Material Dashboard 2 React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDTypography\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MDTypography = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    color,\n    fontWeight,\n    textTransform,\n    verticalAlign,\n    textGradient,\n    opacity,\n    children,\n    ...rest\n  } = _ref;\n  const [controller] = useMaterialUIController();\n  const {\n    darkMode\n  } = controller;\n  return /*#__PURE__*/_jsxDEV(MDTypographyRoot, {\n    ...rest,\n    ref: ref,\n    ownerState: {\n      color,\n      textTransform,\n      verticalAlign,\n      fontWeight,\n      opacity,\n      textGradient,\n      darkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}, \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n})), \"s0n8bwZXGOuz7un3Pl1FvVzqqsQ=\", false, function () {\n  return [useMaterialUIController];\n});\n\n// Setting default values for the props of MDTypography\n_c2 = MDTypography;\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1\n};\n\n// Typechecking props for the MDTypography\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\"inherit\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"white\"]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\"unset\", \"baseline\", \"sub\", \"super\", \"text-top\", \"text-bottom\", \"middle\", \"top\", \"bottom\"]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number\n};\nexport default MDTypography;\nvar _c, _c2;\n$RefreshReg$(_c, \"MDTypography$forwardRef\");\n$RefreshReg$(_c2, \"MDTypography\");","map":{"version":3,"names":["forwardRef","PropTypes","MDTypographyRoot","useMaterialUIController","jsxDEV","_jsxDEV","MDTypography","_s","_c","_ref","ref","color","fontWeight","textTransform","verticalAlign","textGradient","opacity","children","rest","controller","darkMode","ownerState","fileName","_jsxFileName","lineNumber","columnNumber","_c2","defaultProps","propTypes","oneOf","bool","node","isRequired","number","$RefreshReg$"],"sources":["/Users/alicehu/Desktop/SBOM/sbom/testing/material-dashboard-react/src/components/MDTypography/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { forwardRef } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// Custom styles for MDTypography\nimport MDTypographyRoot from \"components/MDTypography/MDTypographyRoot\";\n\n// Material Dashboard 2 React contexts\nimport { useMaterialUIController } from \"context\";\n\nconst MDTypography = forwardRef(\n  (\n    { color, fontWeight, textTransform, verticalAlign, textGradient, opacity, children, ...rest },\n    ref\n  ) => {\n    const [controller] = useMaterialUIController();\n    const { darkMode } = controller;\n\n    return (\n      <MDTypographyRoot\n        {...rest}\n        ref={ref}\n        ownerState={{\n          color,\n          textTransform,\n          verticalAlign,\n          fontWeight,\n          opacity,\n          textGradient,\n          darkMode,\n        }}\n      >\n        {children}\n      </MDTypographyRoot>\n    );\n  }\n);\n\n// Setting default values for the props of MDTypography\nMDTypography.defaultProps = {\n  color: \"dark\",\n  fontWeight: false,\n  textTransform: \"none\",\n  verticalAlign: \"unset\",\n  textGradient: false,\n  opacity: 1,\n};\n\n// Typechecking props for the MDTypography\nMDTypography.propTypes = {\n  color: PropTypes.oneOf([\n    \"inherit\",\n    \"primary\",\n    \"secondary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"error\",\n    \"light\",\n    \"dark\",\n    \"text\",\n    \"white\",\n  ]),\n  fontWeight: PropTypes.oneOf([false, \"light\", \"regular\", \"medium\", \"bold\"]),\n  textTransform: PropTypes.oneOf([\"none\", \"capitalize\", \"uppercase\", \"lowercase\"]),\n  verticalAlign: PropTypes.oneOf([\n    \"unset\",\n    \"baseline\",\n    \"sub\",\n    \"super\",\n    \"text-top\",\n    \"text-bottom\",\n    \"middle\",\n    \"top\",\n    \"bottom\",\n  ]),\n  textGradient: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  opacity: PropTypes.number,\n};\n\nexport default MDTypography;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,OAAO;;AAElC;AACA,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,gBAAgB,MAAM,0CAA0C;;AAEvE;AACA,SAASC,uBAAuB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,gBAAAC,EAAA,eAAGP,UAAU,CAAAQ,EAAA,GAAAD,EAAA,CAC7B,CAAAE,IAAA,EAEEC,GAAG,KACA;EAAAH,EAAA;EAAA,IAFH;IAAEI,KAAK;IAAEC,UAAU;IAAEC,aAAa;IAAEC,aAAa;IAAEC,YAAY;IAAEC,OAAO;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAAT,IAAA;EAG7F,MAAM,CAACU,UAAU,CAAC,GAAGhB,uBAAuB,CAAC,CAAC;EAC9C,MAAM;IAAEiB;EAAS,CAAC,GAAGD,UAAU;EAE/B,oBACEd,OAAA,CAACH,gBAAgB;IAAA,GACXgB,IAAI;IACRR,GAAG,EAAEA,GAAI;IACTW,UAAU,EAAE;MACVV,KAAK;MACLE,aAAa;MACbC,aAAa;MACbF,UAAU;MACVI,OAAO;MACPD,YAAY;MACZK;IACF,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEvB,CAAC;EAAA,QApBsBtB,uBAAuB;AAAA,EAqBhD,CAAC;EAAA,QArBwBA,uBAAuB;AAAA,EAqB/C;;AAED;AAAAuB,GAAA,GA5BMpB,YAAY;AA6BlBA,YAAY,CAACqB,YAAY,GAAG;EAC1BhB,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,MAAM;EACrBC,aAAa,EAAE,OAAO;EACtBC,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE;AACX,CAAC;;AAED;AACAV,YAAY,CAACsB,SAAS,GAAG;EACvBjB,KAAK,EAAEV,SAAS,CAAC4B,KAAK,CAAC,CACrB,SAAS,EACT,SAAS,EACT,WAAW,EACX,MAAM,EACN,SAAS,EACT,SAAS,EACT,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,CACR,CAAC;EACFjB,UAAU,EAAEX,SAAS,CAAC4B,KAAK,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EAC1EhB,aAAa,EAAEZ,SAAS,CAAC4B,KAAK,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;EAChFf,aAAa,EAAEb,SAAS,CAAC4B,KAAK,CAAC,CAC7B,OAAO,EACP,UAAU,EACV,KAAK,EACL,OAAO,EACP,UAAU,EACV,aAAa,EACb,QAAQ,EACR,KAAK,EACL,QAAQ,CACT,CAAC;EACFd,YAAY,EAAEd,SAAS,CAAC6B,IAAI;EAC5Bb,QAAQ,EAAEhB,SAAS,CAAC8B,IAAI,CAACC,UAAU;EACnChB,OAAO,EAAEf,SAAS,CAACgC;AACrB,CAAC;AAED,eAAe3B,YAAY;AAAC,IAAAE,EAAA,EAAAkB,GAAA;AAAAQ,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAR,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}