{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmu/sbom/chipapp/src/Tree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = () => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    // Create the SVG container\n    const width = 600;\n    const height = 600;\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(50, 50)`);\n\n    // Define the tree layout\n    const treeLayout = d3.tree().size([height - 100, width - 100]);\n\n    // Create a hierarchy from the data\n    const root = d3.hierarchy(data);\n\n    // Assign positions to each node\n    treeLayout(root);\n\n    // Create links\n    const links = root.links();\n    svg.selectAll('.link').data(links).enter().append('path').attr('class', 'link');\n\n    // Create nodes\n    const nodes = root.descendants();\n    const node = svg.selectAll('.node').data(nodes).enter().append('g').attr('class', 'node').attr('transform', d => `translate(${d.y},${d.x})`);\n    node.append('circle').attr('r', 4);\n    node.append('text').attr('dy', 5).attr('x', d => d.children ? -8 : 8).style('text-anchor', d => d.children ? 'end' : 'start').text(d => d.data.name);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_s(Tree, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useEffect","useRef","d3","data","jsxDEV","_jsxDEV","Tree","_s","svgRef","width","height","svg","select","current","attr","append","treeLayout","tree","size","root","hierarchy","links","selectAll","enter","nodes","descendants","node","d","y","x","children","style","text","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmu/sbom/chipapp/src/Tree.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data from './data.json';\n\nconst Tree = () => {\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    // Create the SVG container\n    const width = 600;\n    const height = 600;\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(50, 50)`);\n\n    // Define the tree layout\n    const treeLayout = d3.tree().size([height - 100, width - 100]);\n\n    // Create a hierarchy from the data\n    const root = d3.hierarchy(data);\n\n    // Assign positions to each node\n    treeLayout(root);\n\n    // Create links\n    const links = root.links();\n    svg\n      .selectAll('.link')\n      .data(links)\n      .enter()\n      .append('path')\n      .attr('class', 'link')\n\n    // Create nodes\n    const nodes = root.descendants();\n    const node = svg\n      .selectAll('.node')\n      .data(nodes)\n      .enter()\n      .append('g')\n      .attr('class', 'node')\n      .attr('transform', d => `translate(${d.y},${d.x})`);\n\n    node.append('circle').attr('r', 4);\n\n    node.append('text')\n      .attr('dy', 5)\n      .attr('x', d => (d.children ? -8 : 8))\n      .style('text-anchor', d => (d.children ? 'end' : 'start'))\n      .text(d => d.data.name);\n  }, []);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default Tree;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAElB,MAAMC,GAAG,GAAGT,EAAE,CACXU,MAAM,CAACJ,MAAM,CAACK,OAAO,CAAC,CACtBC,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CACpBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAG,mBAAkB,CAAC;;IAEzC;IACA,MAAME,UAAU,GAAGd,EAAE,CAACe,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,CAACR,MAAM,GAAG,GAAG,EAAED,KAAK,GAAG,GAAG,CAAC,CAAC;;IAE9D;IACA,MAAMU,IAAI,GAAGjB,EAAE,CAACkB,SAAS,CAACjB,IAAI,CAAC;;IAE/B;IACAa,UAAU,CAACG,IAAI,CAAC;;IAEhB;IACA,MAAME,KAAK,GAAGF,IAAI,CAACE,KAAK,CAAC,CAAC;IAC1BV,GAAG,CACAW,SAAS,CAAC,OAAO,CAAC,CAClBnB,IAAI,CAACkB,KAAK,CAAC,CACXE,KAAK,CAAC,CAAC,CACPR,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;;IAExB;IACA,MAAMU,KAAK,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAGf,GAAG,CACbW,SAAS,CAAC,OAAO,CAAC,CAClBnB,IAAI,CAACqB,KAAK,CAAC,CACXD,KAAK,CAAC,CAAC,CACPR,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,WAAW,EAAEa,CAAC,IAAK,aAAYA,CAAC,CAACC,CAAE,IAAGD,CAAC,CAACE,CAAE,GAAE,CAAC;IAErDH,IAAI,CAACX,MAAM,CAAC,QAAQ,CAAC,CAACD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAElCY,IAAI,CAACX,MAAM,CAAC,MAAM,CAAC,CAChBD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,GAAG,EAAEa,CAAC,IAAKA,CAAC,CAACG,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC,CACrCC,KAAK,CAAC,aAAa,EAAEJ,CAAC,IAAKA,CAAC,CAACG,QAAQ,GAAG,KAAK,GAAG,OAAQ,CAAC,CACzDE,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACxB,IAAI,CAAC8B,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA;IAAK6B,GAAG,EAAE1B;EAAO;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAAC/B,EAAA,CArDID,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}