{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmu/sbom/chipapp/src/Tree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = () => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    // Create the SVG container\n    const width = 600;\n    const height = 600;\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).append('g').attr('transform', `translate(50, 50)`);\n\n    // Define the tree layout\n    const treeLayout = d3.tree().size([height - 100, width - 100]);\n\n    // Create a hierarchy from the data\n    const root = d3.hierarchy(data);\n\n    // Assign positions to each node\n    treeLayout(root);\n\n    // Create links\n    const links = root.links();\n    svg.selectAll('.link').data(links).enter().append('path').attr('class', 'link').attr('d', d => {\n      return `M${d.source.y},${d.source.x}C${(d.source.y + d.target.y) / 2},${d.source.x} ${(d.source.y + d.target.y) / 2},${d.target.x} ${d.target.y},${d.target.x}`;\n    });\n\n    // Create nodes\n    const nodes = root.descendants();\n    const node = svg.selectAll('.node').data(nodes).enter().append('g').attr('class', 'node').attr('transform', d => `translate(${d.y},${d.x})`);\n    node.append('circle').attr('r', 4);\n    node.append('text').attr('dy', 5).attr('x', d => d.children ? -8 : 8).style('text-anchor', d => d.children ? 'end' : 'start').text(d => d.data.name);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(Tree, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Tree","_s","svgRef","width","height","svg","select","current","attr","append","treeLayout","tree","size","root","hierarchy","data","links","selectAll","enter","d","source","y","x","target","nodes","descendants","node","children","style","text","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmu/sbom/chipapp/src/Tree.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst Tree = () => {\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    // Create the SVG container\n    const width = 600;\n    const height = 600;\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(50, 50)`);\n\n    // Define the tree layout\n    const treeLayout = d3.tree().size([height - 100, width - 100]);\n\n    // Create a hierarchy from the data\n    const root = d3.hierarchy(data);\n\n    // Assign positions to each node\n    treeLayout(root);\n\n    // Create links\n    const links = root.links();\n    svg\n      .selectAll('.link')\n      .data(links)\n      .enter()\n      .append('path')\n      .attr('class', 'link')\n      .attr('d', d => {\n        return `M${d.source.y},${d.source.x}C${(d.source.y + d.target.y) / 2},${d.source.x} ${(d.source.y + d.target.y) / 2},${d.target.x} ${d.target.y},${d.target.x}`;\n      });\n\n    // Create nodes\n    const nodes = root.descendants();\n    const node = svg\n      .selectAll('.node')\n      .data(nodes)\n      .enter()\n      .append('g')\n      .attr('class', 'node')\n      .attr('transform', d => `translate(${d.y},${d.x})`);\n\n    node.append('circle').attr('r', 4);\n\n    node.append('text')\n      .attr('dy', 5)\n      .attr('x', d => (d.children ? -8 : 8))\n      .style('text-anchor', d => (d.children ? 'end' : 'start'))\n      .text(d => d.data.name);\n  }, []);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default Tree;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;IAElB,MAAMC,GAAG,GAAGR,EAAE,CACXS,MAAM,CAACJ,MAAM,CAACK,OAAO,CAAC,CACtBC,IAAI,CAAC,OAAO,EAAEL,KAAK,CAAC,CACpBK,IAAI,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CACtBK,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAG,mBAAkB,CAAC;;IAEzC;IACA,MAAME,UAAU,GAAGb,EAAE,CAACc,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,CAACR,MAAM,GAAG,GAAG,EAAED,KAAK,GAAG,GAAG,CAAC,CAAC;;IAE9D;IACA,MAAMU,IAAI,GAAGhB,EAAE,CAACiB,SAAS,CAACC,IAAI,CAAC;;IAE/B;IACAL,UAAU,CAACG,IAAI,CAAC;;IAEhB;IACA,MAAMG,KAAK,GAAGH,IAAI,CAACG,KAAK,CAAC,CAAC;IAC1BX,GAAG,CACAY,SAAS,CAAC,OAAO,CAAC,CAClBF,IAAI,CAACC,KAAK,CAAC,CACXE,KAAK,CAAC,CAAC,CACPT,MAAM,CAAC,MAAM,CAAC,CACdD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAEW,CAAC,IAAI;MACd,OAAQ,IAAGA,CAAC,CAACC,MAAM,CAACC,CAAE,IAAGF,CAAC,CAACC,MAAM,CAACE,CAAE,IAAG,CAACH,CAAC,CAACC,MAAM,CAACC,CAAC,GAAGF,CAAC,CAACI,MAAM,CAACF,CAAC,IAAI,CAAE,IAAGF,CAAC,CAACC,MAAM,CAACE,CAAE,IAAG,CAACH,CAAC,CAACC,MAAM,CAACC,CAAC,GAAGF,CAAC,CAACI,MAAM,CAACF,CAAC,IAAI,CAAE,IAAGF,CAAC,CAACI,MAAM,CAACD,CAAE,IAAGH,CAAC,CAACI,MAAM,CAACF,CAAE,IAAGF,CAAC,CAACI,MAAM,CAACD,CAAE,EAAC;IACjK,CAAC,CAAC;;IAEJ;IACA,MAAME,KAAK,GAAGX,IAAI,CAACY,WAAW,CAAC,CAAC;IAChC,MAAMC,IAAI,GAAGrB,GAAG,CACbY,SAAS,CAAC,OAAO,CAAC,CAClBF,IAAI,CAACS,KAAK,CAAC,CACXN,KAAK,CAAC,CAAC,CACPT,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,WAAW,EAAEW,CAAC,IAAK,aAAYA,CAAC,CAACE,CAAE,IAAGF,CAAC,CAACG,CAAE,GAAE,CAAC;IAErDI,IAAI,CAACjB,MAAM,CAAC,QAAQ,CAAC,CAACD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAElCkB,IAAI,CAACjB,MAAM,CAAC,MAAM,CAAC,CAChBD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,GAAG,EAAEW,CAAC,IAAKA,CAAC,CAACQ,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC,CACrCC,KAAK,CAAC,aAAa,EAAET,CAAC,IAAKA,CAAC,CAACQ,QAAQ,GAAG,KAAK,GAAG,OAAQ,CAAC,CACzDE,IAAI,CAACV,CAAC,IAAIA,CAAC,CAACJ,IAAI,CAACe,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO/B,OAAA;IAAKgC,GAAG,EAAE7B;EAAO;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjC,CAAC;AAAClC,EAAA,CAxDID,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA0DV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}