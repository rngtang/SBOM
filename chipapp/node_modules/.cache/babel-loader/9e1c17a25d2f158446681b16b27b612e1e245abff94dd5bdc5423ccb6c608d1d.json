{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmu/sbom/chipapp/src/Tree.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = () => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!svgRef.current) return;\n    const width = 600;\n    const height = 600;\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const root = d3.hierarchy(data);\n    const treeLayout = d3.tree().size([width, height]);\n    treeLayout(root);\n    const links = root.links();\n    const nodes = root.descendants();\n    const link = svg.selectAll('.link').data(links).enter().append('path').attr('class', 'link').attr('d', d3.linkHorizontal().x(d => d.y).y(d => d.x));\n    const node = svg.selectAll('.node').data(nodes).enter().append('g').attr('class', 'node').attr('transform', d => `translate(${d.y},${d.x})`);\n    node.append('circle').attr('r', 4);\n    node.append('text').attr('dy', 5).attr('x', d => d.children ? -8 : 8).style('text-anchor', d => d.children ? 'end' : 'start').text(d => d.data.name);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n_s(Tree, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Tree;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","useEffect","useRef","d3","data","jsxDEV","_jsxDEV","Tree","_s","svgRef","current","width","height","margin","top","right","bottom","left","svg","select","attr","append","root","hierarchy","treeLayout","tree","size","links","nodes","descendants","link","selectAll","enter","linkHorizontal","x","d","y","node","children","style","text","name","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmu/sbom/chipapp/src/Tree.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport data from './data.json';\n\nconst Tree = () => {\n    const svgRef = useRef(null);\n\n    useEffect(() => {\n        if (!svgRef.current) return;\n\n        const width = 600;\n        const height = 600;\n        const margin = { top: 20, right: 20, bottom: 20, left: 20 };\n\n        const svg = d3\n            .select(svgRef.current)\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        const root = d3.hierarchy(data);\n\n        const treeLayout = d3.tree().size([width, height]);\n\n        treeLayout(root);\n\n        const links = root.links();\n        const nodes = root.descendants();\n\n        const link = svg\n            .selectAll('.link')\n            .data(links)\n            .enter()\n            .append('path')\n            .attr('class', 'link')\n            .attr('d', d3.linkHorizontal().x(d => d.y).y(d => d.x));\n\n        const node = svg\n            .selectAll('.node')\n            .data(nodes)\n            .enter()\n            .append('g')\n            .attr('class', 'node')\n            .attr('transform', d => `translate(${d.y},${d.x})`);\n\n        node.append('circle').attr('r', 4);\n\n        node.append('text')\n            .attr('dy', 5)\n            .attr('x', d => (d.children ? -8 : 8))\n            .style('text-anchor', d => (d.children ? 'end' : 'start'))\n            .text(d => d.data.name);\n    }, []);\n\n    return <svg ref={svgRef}></svg>;\n};\n\nexport default Tree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}