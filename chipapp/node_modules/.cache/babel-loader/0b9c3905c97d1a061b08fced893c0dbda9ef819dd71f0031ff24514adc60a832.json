{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmu/sbom/chipapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport data from './data.json';\nimport { toBeRequired } from '@testing-library/jest-dom/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [treeData, setTreeData] = useState(null);\n  useEffect(() => {\n    // Load the data from the JSON file\n    // In this example, assume the data.json file is in the same directory as this component\n    // Adjust the path accordingly if it's located elsewhere\n    fetch('./data.json').then(response => response.json()).then(jsonData => {\n      setTreeData(jsonData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: treeData ? /*#__PURE__*/_jsxDEV(Tree, {\n      data: treeData,\n      orientation: \"vertical\",\n      translate: {\n        x: 300,\n        y: 50\n      },\n      pathFunc: \"diagonal\",\n      collapsible: toBeRequired,\n      zoom: 0.7\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tree data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DU6Sp2gzfXs0OkYeZ222lySI+Co=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Tree","data","toBeRequired","jsxDEV","_jsxDEV","App","_s","treeData","setTreeData","fetch","then","response","json","jsonData","catch","error","console","style","width","height","children","orientation","translate","x","y","pathFunc","collapsible","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jamesmu/sbom/chipapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Tree from 'react-d3-tree';\nimport data from './data.json';\nimport { toBeRequired } from '@testing-library/jest-dom/matchers';\n\nconst App = () => {\n  const [treeData, setTreeData] = useState(null);\n\n  useEffect(() => {\n    // Load the data from the JSON file\n    // In this example, assume the data.json file is in the same directory as this component\n    // Adjust the path accordingly if it's located elsewhere\n    fetch('./data.json')\n      .then((response) => response.json())\n      .then((jsonData) => {\n        setTreeData(jsonData);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <div style={{ width: '100%', height: '100vh' }}>\n      {treeData ? (\n        <Tree\n          data={treeData}\n          orientation=\"vertical\"\n          translate={{ x: 300, y: 50 }}\n          pathFunc=\"diagonal\"\n          collapsible={toBeRequired}\n          zoom={0.7}\n        />\n      ) : (\n        <div>Loading tree data...</div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,YAAY,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAW,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,QAAQ,IAAK;MAClBL,WAAW,CAACK,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAC5Cb,QAAQ,gBACPH,OAAA,CAACJ,IAAI;MACHC,IAAI,EAAEM,QAAS;MACfc,WAAW,EAAC,UAAU;MACtBC,SAAS,EAAE;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAG,CAAE;MAC7BC,QAAQ,EAAC,UAAU;MACnBC,WAAW,EAAExB,YAAa;MAC1ByB,IAAI,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,gBAEF3B,OAAA;MAAAgB,QAAA,EAAK;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}