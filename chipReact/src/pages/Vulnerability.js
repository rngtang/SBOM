import { useState, useEffect } from 'react'
import * as React from 'react'
import  styles from './Vulnerability.module.css';
import { useNavigate, useLocation } from 'react-router-dom';
import { Popover, OverlayTrigger } from 'react-bootstrap'
import { Button } from 'react-bootstrap';
import { style } from 'd3';
import infoImage from './images/moreinfo.png'

const Intro = ({sbomId, sbomName, sbomDesc}) => {
    var vulnnum = 1;
    const [vulns, setVulns] = useState([]);
    const [trace, setTrace] = useState(null);
    const navigate = useNavigate();
    const sbomsUrl = `http://localhost:8080/sboms/${sbomId}/vulnerabilities`;

    // create a handle for fetching vulnerabillities 
    const fetchVulns = () => {
        fetch(sbomsUrl)
            .then((response) => response.json())
            .then((data) => {
                // debugger line
                // console.log(data);
                setVulns(data);
            })
    }

    useEffect(() => {
        fetchVulns();
        // console.log("getting all vulnerabilities for sbom 1");
    }, [])
    const fetchTrace = () => {
        fetch(`http://localhost:8080/sboms/${sbomId}/vuln_trace`)
            .then((response) => response.json())
            .then((data) => {
                // debugger line
                // console.log(data);
                setTrace(data);
            })
    }
    useEffect (() => {
        fetchTrace();
    }, [])

        const handleButtonClick = () => {
            navigate('/viewSBOMs');
        }

    const popoverHoverFocus = (
        <Popover id="popover-trigger-hover-focus" title="Popover-top" style={{padding: '10px 10px 0px 10px'}}>
          <strong>Disclaimer:</strong> These packages may or may not depend on the affected package as version number of affected package is not checked. This section is only generated for the following:
          <ul>
            <li>package-lock.json</li>
            <li>yarn.lock</li>
            <li>pnpm-lock.yaml</li>
            <li>Maven (pom.xml)</li>
            <li>Gradle</li>
            <li>Python (requirements.txt, setup.py, pyproject.toml, poetry.lock)</li>
          </ul>
        </Popover>
      );
    return (
        <>
        <div className={styles.header}>
            <Button type='submit'className={styles.button} onClick={handleButtonClick}>
                &#8592; Go back to all SBOMs 
            </Button>
            <div className={styles.namedesc}>
                <p><strong>SBOM Name: </strong> {sbomName}</p>
                <p><strong>SBOM Description: </strong> {sbomDesc}</p>
            </div>
        </div>

            {
                vulns.map((vuln => {

                    return (
                        <>
                            <div className={styles.section}>
                                {vuln.id && vuln.description && <h3 key={`id_description-${vuln.id}`} className={styles.h3}><strong> {vulnnum++}: {vuln.description}</strong></h3>}
                                {<p></p>}
                                {vuln.vulnID && <p key={`vulnID-${vuln.vulnID}`}><strong>Vulnerability ID: </strong>{vuln.vulnID}</p>}
                                {vuln.sources[0] ? <p key={`source_name-${vuln.sources[0].name}`}><strong>Source: </strong>{vuln.sources[0].name}</p>: null}
                                {vuln.sources[0] ? <p key={`source_url-${vuln.sources[0].url}`}><strong>Source Link </strong> - visit here to learn more: <a href={vuln.sources[0].url} target="_blank" style={{ fontWeight: 'bold', color: 'var(--dukeblue)' }}> {vuln.sources[0].url}</a></p>: null} 
                                {vuln.ratings[0] ? <p key={`ratings_severity-${vuln.ratings[0].severity}`}><strong>Severity: </strong>{vuln.ratings[0].severity}</p>: null}
                                {vuln.ratings[0].score ? <p key={`ratings_score-${vuln.ratings[0].score}`}><strong>Severity Score: </strong>{vuln.ratings[0].score}</p>: null}
                                {vuln.recommendation && <p key={`recommendation-${vuln.recommendation}`}><strong>Recommended Action: </strong> - visit here to learn more: <a href={vuln.recommendation} target="_blank" style={{ fontWeight: 'bold', color: 'var(--dukeblue)' }}> {vuln.recommendation}</a></p>}
                                <hr></hr>
                                {vuln.affected && <p key={`affects-${vuln.affected}`}><strong>Affected Package(s): </strong>{vuln.affected.join(", ")}</p>}

                                {vuln.id && trace[vuln.id][0] && <p key={vulnnum} style={{display: 'inline-block'}}><strong>Your Software Packages Using the Affected Package:   </strong></p>}
                                {vuln.id && trace[vuln.id][0] && <OverlayTrigger
                                    trigger={['hover', 'focus']}
                                    placement="top"
                                    overlay={popoverHoverFocus}
                                    >
                                    <img className = 'moreInfo' src={infoImage}/>
                                </OverlayTrigger> }
                                <ul>
                                {trace[vuln.id].map((t => {
                                    return(
                                        <li>{t}</li>
                                    )
                                }))}
                                </ul>
                            </div>
                        </>
                    );
                }))
            }
        </>
    );
}

const Vulnerability = () => {
    const location = useLocation();
    const sbomId = location?.state?.sbomId;
    const sbomName = location?.state?.sbomName;
    const sbomDesc = location?.state?.sbomDesc;

    return (
        <>
            <Intro sbomId={sbomId} sbomName={sbomName} sbomDesc={sbomDesc}/>
        </>
    );
};

export default Vulnerability;